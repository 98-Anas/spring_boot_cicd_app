image: docker:24.0

services:
  - name: docker:24.0-dind
    command: ["--tls=false", "--host=tcp://0.0.0.0:2375"]
    alias: docker
    variables:
      DOCKER_TLS_CERTDIR: ""
      DOCKER_HOST: tcp://docker:2375

variables:
  DOCKER_BUILDKIT: 1
  DOCKER_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress"
  CS_IMAGE: $DOCKER_TAG  # For container scanning

stages:
  - build
  - test
  - sast
  - dependency_scan
  - container_scan
  - deploy

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository
    - target/

build:
  stage: build
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/
  tags:
    - dockerExec

test:
  stage: test
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn test
  artifacts:
    reports:
      junit: target/surefire-reports/*.xml
  tags:
    - dockerExec

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml

sast:
  variables:
    SAST_EXCLUDED_ANALYZERS: "brakeman,nodejs-scan,eslint,gosec,flawfinder,security-code-scan"
  tags:
    - dockerExec

dependency_scanning:
  stage: dependency_scan
  image: owasp/dependency-check:latest
  script:
    - dependency-check.sh --project "$CI_PROJECT_NAME" --scan . --format "ALL" --out "dependency-check-report"
  artifacts:
    when: always
    reports:
      dependency_scanning: dependency-check-report/dependency-check-report.xml
    paths:
      - dependency-check-report/
    expire_in: 1 week
  allow_failure: true
  tags:
    - dockerExec

container_scanning:
  variables:
    CS_IMAGE: $DOCKER_TAG
    CS_DOCKERFILE_PATH: "Dockerfile"
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker pull $DOCKER_TAG || true
  allow_failure: true
  tags:
    - dockerExec

deploy:
  stage: deploy
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - until docker info; do sleep 1; done
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker stop spring-app || true
    - docker rm spring-app || true
    - docker run -d --name spring-app -p 8080:8080 $CI_REGISTRY_IMAGE:latest
  only:
    - main
  tags:
    - dockerExec