stages:
  - build
  - test
  - sast
  - dependency_scan
  - container_scan
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

build_job:
  stage: build
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/
  tags:
    - dockerExec

test_job:
  stage: test
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn test
  tags:
    - dockerExec

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml

sast:
  variables:
    SAST_EXCLUDED_ANALYZERS: "gosec,eslint,nodejs-scan"  # Disable non-Java analyzers
  tags:
    - dockerExec

dependency_scanning:
  stage: dependency_scan
  image: owasp/dependency-check:latest
  script:
    - dependency-check.sh --project "$CI_PROJECT_NAME" --scan . --format "ALL"
  artifacts:
    when: always
    paths:
      - dependency-check-report.*
  allow_failure: true
  tags:
    - dockerExec

build_docker:
  stage: build
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build -t $DOCKER_IMAGE .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $DOCKER_IMAGE
  tags:
    - dockerExec


container_scanning:
  variables:
    CS_IMAGE: $DOCKER_IMAGE
  allow_failure: true
  tags:
    - dockerExec

deploy:
  stage: deploy
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker pull $DOCKER_IMAGE
    - docker tag $DOCKER_IMAGE $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker run -d -p 8080:8080 $CI_REGISTRY_IMAGE:latest
  only:
    - main
  tags:
    - dockerExec