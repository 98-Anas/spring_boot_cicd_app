image: docker:24.0

services:
  - name: docker:24.0-dind
    command: ["--tls=false", "--host=tcp://0.0.0.0:2375"]
    alias: docker
    variables:
      DOCKER_TLS_CERTDIR: ""
      DOCKER_HOST: tcp://docker:2375

variables:
  DOCKER_BUILDKIT: 1
  DOCKER_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dmaven.artifact.threads=8"
  MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress"

stages:
  - build
  - test
  - sast
  - dependency_scan
  - container_scan
  - deploy

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository
    - target/
  policy: pull-push

build:
  stage: build
  before_script:
    - until docker info; do sleep 1; done
  script:
    - docker build --build-arg MAVEN_OPTS="$MAVEN_OPTS" -t $DOCKER_TAG .
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker push $DOCKER_TAG
  tags:
    - dockerExec

test:
  stage: test
  needs: ["build"]
  image: maven:3.8.6-eclipse-temurin-17
  variables:
    DOCKER_HOST: ""
    DOCKER_TLS_CERTDIR: ""
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    paths:
      - target/
  tags:
    - dockerExec

sast:
  stage: sast
  needs: ["build"]
  image: docker:24.0
  script:
    - echo "SAST scanning would be implemented here"
    - echo "Consider using GitLab's built-in SAST templates"
  tags:
    - dockerExec

dependency_scan:
  stage: dependency_scan
  needs: ["build"]
  image: docker:24.0
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.49.1
  script:
    - trivy fs --security-checks vuln,config --severity HIGH,CRITICAL .
  tags:
    - dockerExec

container_scan:
  stage: container_scan
  needs: ["build"]
  image: docker:24.0
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.49.1
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker pull "$DOCKER_TAG"
  script:
    - trivy image --exit-code 0 --ignore-unfixed "$DOCKER_TAG"
  tags:
    - dockerExec

deploy:
  stage: deploy
  needs: ["test", "sast", "dependency_scan", "container_scan"]
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - until docker info; do sleep 1; done
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker pull $DOCKER_TAG
    - docker tag $DOCKER_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker stop spring-app || true
    - docker rm spring-app || true
    - docker run -d --name spring-app -p 8080:8080 $CI_REGISTRY_IMAGE:latest
  only:
    - main
  tags:
    - dockerExec